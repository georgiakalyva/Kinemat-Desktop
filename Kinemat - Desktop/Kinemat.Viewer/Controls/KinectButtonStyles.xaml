<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:k="http://schemas.microsoft.com/kinect/2013" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

	<!-- All KinectTileButtons play a sound on mouse/hand pointer enter and on selection -->
	<Style TargetType="{x:Type k:KinectTileButton}">
		<Style.Triggers>
			<EventTrigger>
				<EventTrigger.RoutedEvent>
					<RoutedEvent>k:KinectRegion.HandPointerEnter</RoutedEvent>
				</EventTrigger.RoutedEvent>
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.MouseEnter">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="ButtonBase.Click">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-select.wav" />
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<!-- All KinectCircleButtons play a sound on mouse/hand pointer enter and on selection -->
	<Style x:Key="KinectCircleButtons" TargetType="{x:Type k:KinectCircleButton}">
		<Style.Triggers>
			<EventTrigger>
				<EventTrigger.RoutedEvent>
					<RoutedEvent>k:KinectRegion.HandPointerEnter</RoutedEvent>
				</EventTrigger.RoutedEvent>
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.MouseEnter">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="ButtonBase.Click">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-select.wav" />
			</EventTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="KinectCircleButtonsNoEllipse" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtonStyleNoEllipse}">
		<Style.Triggers>
			<EventTrigger>
				<EventTrigger.RoutedEvent>
					<RoutedEvent>k:KinectRegion.HandPointerEnter</RoutedEvent>
				</EventTrigger.RoutedEvent>
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.MouseEnter">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="ButtonBase.Click">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-select.wav" />
			</EventTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="KinectBubbleButtonsStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtonStyleNoEllipse}">
		<Style.Triggers>
			<EventTrigger>
				<EventTrigger.RoutedEvent>
					<RoutedEvent>k:KinectRegion.HandPointerEnter</RoutedEvent>
				</EventTrigger.RoutedEvent>
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.MouseEnter">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-enter.wav" />
			</EventTrigger>
			<EventTrigger RoutedEvent="ButtonBase.Click">
				<SoundPlayerAction Source="pack://application:,,,/Content/Sounds/button-select.wav" />
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<!-- Larger KinectTileButton style -->
	<Style TargetType="{x:Type k:KinectTileButton}" 
		BasedOn="{StaticResource {x:Type k:KinectTileButton}}" 
		x:Key="LargeKinectTileButton">
		<Setter Property="Width" Value="330" />
		<Setter Property="Height" Value="330" />
		<Setter Property="FontSize" Value="36" />
	</Style>


	<Style x:Key="BackButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource ArrowLeft}"/>
		<Setter Property="Label" Value="Back"/>
		<Setter Property="LabelPosition" Value="Bottom"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Foreground" Value="#511C74"/>
	</Style>

	<Style x:Key="NextButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource ArrowRight}"/>
		<Setter Property="Label" Value="Next"/>
		<Setter Property="LabelPosition" Value="Bottom"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
	</Style>

	<Style x:Key="UpButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource ArrowUp}"/>
		<Setter Property="Label" Value="Next"/>
		<Setter Property="LabelPosition" Value="Bottom"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Foreground" Value="#5A5B5B"/>
	</Style>

	<Style x:Key="DownButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource ArrowDown}"/>
		<Setter Property="Label" Value="Next"/>
		<Setter Property="LabelPosition" Value="Bottom"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Foreground" Value="#5A5B5B"/>
	</Style>

	<Style x:Key="PlayButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource PlayGlyph}"/>
		<Setter Property="Width" Value="225"/>
		<Setter Property="Height" Value="225"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="LabelPosition" Value="None"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="ContentPressedForeground" Value="Black" />
	</Style>

	<Style x:Key="PauseButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource PauseGlyph}"/>
		<Setter Property="Width" Value="225"/>
		<Setter Property="Height" Value="225"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="LabelPosition" Value="None"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="ContentPressedForeground" Value="Black" />
	</Style>

	<Style x:Key="ReplayButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtons}">
		<Setter Property="Content" Value="{StaticResource ReplayGlyph}"/>
		<Setter Property="Width" Value="225"/>
		<Setter Property="Height" Value="225"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="LabelPosition" Value="None"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="ContentPressedForeground" Value="Black" />
	</Style>

	<Style x:Key="CancelButtonStyle" TargetType="{x:Type k:KinectCircleButton}">
		<Setter Property="Content" Value="{StaticResource XGlyph}"/>
		<Setter Property="Label" Value="Cancel"/>
		<Setter Property="LabelPosition" Value="None"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="ContentPressedForeground" Value="Black" />
	</Style>

	<Style x:Key="PlayKinectGameButtonStyle" TargetType="{x:Type k:KinectCircleButton}" BasedOn="{StaticResource KinectCircleButtonsNoEllipse}">
		<Setter Property="Content" Value="{StaticResource PlayKinectGameGlyph}" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="LabelPosition" Value="None" />
	</Style>
	<SolidColorBrush x:Key="KinectCircleButtonDisabledForegroundThemeBrush" Color="#939597"/>
	
	<k:ContentStateToVisibilityConverter x:Key="ContentStateToVisibilityConverter"/>
	<ControlTemplate x:Key="KinectBubbleButtonStyle" TargetType="{x:Type k:KinectCircleButton}">
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
									<!--<Setter TargetName="ellipseFill" Property="Fill" Value="{StaticResource KinectCircleButtonDisabledForegroundThemeBrush}"></Setter>
									<Setter TargetName="ellipseFill" Property="Stroke" Value="{StaticResource KinectCircleButtonDisabledForegroundThemeBrush}"></Setter>
									<Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource KinectCircleButtonDisabledForegroundThemeBrush}"></Setter>-->
				<Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource KinectCircleButtonDisabledForegroundThemeBrush}"/>
				<Setter Property="ContentForeground" Value="{StaticResource KinectCircleButtonDisabledForegroundThemeBrush}"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="ContentForeground" Value="{Binding ContentPressedForeground, RelativeSource={RelativeSource Self}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
		<Viewbox Stretch="Uniform">
			<Viewbox.RenderTransform>
				<ScaleTransform d:Name="CircleButtonRenderTransform" ScaleX="1.0" ScaleY="1.0"/>
			</Viewbox.RenderTransform>
			<Viewbox.RenderTransformOrigin>
				<Point X="0.5" Y="0.5"/>
			</Viewbox.RenderTransformOrigin>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00.15" To="1.0" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleX"/>
							<DoubleAnimation Duration="00:00:00.15" To="1.0" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleY"/>
							<!--<DoubleAnimation Duration="00:00:00" To="0.0" Storyboard.TargetName="ellipseFill" Storyboard.TargetProperty="Opacity"/>-->
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00.15" To="1.05" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleX"/>
							<DoubleAnimation Duration="00:00:00.15" To="1.05" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleY"/>
							<!--<DoubleAnimation Duration="00:00:00" To="0.33" Storyboard.TargetName="ellipseFill" Storyboard.TargetProperty="Opacity"/>-->
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00.15" To="0.95" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleX"/>
							<DoubleAnimation Duration="00:00:00.15" To="0.95" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleY"/>
							<!--<DoubleAnimation Duration="00:00:00" To="1.00" Storyboard.TargetName="ellipseFill" Storyboard.TargetProperty="Opacity"/>-->
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="00:00:00" To="1.0" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleX"/>
							<DoubleAnimation Duration="00:00:00" To="1.0" Storyboard.TargetName="CircleButtonRenderTransform" Storyboard.TargetProperty="ScaleY"/>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Focused">
						<Storyboard/>
					</VisualState>
					<VisualState x:Name="Unfocused" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
				<Grid HorizontalAlignment="Center" Margin="30, 30, 30, 30" Background="Transparent">
					<Grid.RowDefinitions>
						<RowDefinition Height="105" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
										<!--<Ellipse Stroke="{TemplateBinding Foreground}" StrokeThickness="0" Fill="{TemplateBinding Foreground}" Opacity="0.0" Height="105" Width="105" x:Name="ellipseFill"  Grid.Row="0"/>
										<Ellipse Stroke="{TemplateBinding Foreground}" StrokeThickness="9" Fill="Transparent" Height="105" Width="105" x:Name="ellipse"  Grid.Row="0"/>-->
					<Image HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Source="Inner Glow 02 - Black.png"/>
<!--<Ellipse Stroke="{TemplateBinding Foreground}" StrokeThickness="0" Fill="{TemplateBinding Foreground}" Opacity="0.0" Height="105" Width="105" x:Name="ellipseFill"  Grid.Row="0"/>
										<Ellipse Stroke="{TemplateBinding Foreground}" StrokeThickness="9" Fill="Transparent" Height="105" Width="105" x:Name="ellipse"  Grid.Row="0"/>-->
					<ContentPresenter Content="{TemplateBinding Content}" x:Name="PART_DefaultContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="0">
						<ContentPresenter.Resources>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Foreground" Value="{Binding ContentForeground, RelativeSource={RelativeSource AncestorType={x:Type k:KinectCircleButton}}}"/>
								<Setter Property="FontSize" Value="44"/>
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
								<Setter Property="TextAlignment" Value="Center"/>
							</Style>
						</ContentPresenter.Resources>
					</ContentPresenter>
					<Border Grid.Row="1" Background="{TemplateBinding LabelBackground}"
						Visibility="{TemplateBinding Label, Converter={StaticResource ContentStateToVisibilityConverter}}">
						<ContentPresenter 
							x:Name="contentPresenter" 
							ContentTemplate="{TemplateBinding LabelTemplate}"
							ContentTemplateSelector="{TemplateBinding LabelTemplateSelector}"
							Content="{TemplateBinding Label}" 
							HorizontalAlignment="{TemplateBinding HorizontalLabelAlignment}"
							VerticalAlignment="{TemplateBinding VerticalLabelAlignment}"
							TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type k:KinectCircleButton}}}">
							<ContentPresenter.Resources>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type k:KinectCircleButton}}}"/>
									<Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType={x:Type k:KinectCircleButton}}}"/>
									<Setter Property="TextTrimming" Value="WordEllipsis" />
								</Style>
							</ContentPresenter.Resources>
						</ContentPresenter>
					</Border>
				</Grid>
			</Border>
		</Viewbox>
	</ControlTemplate>
	<DataTemplate x:Key="BubbleButtonContentStyle">
		<Viewbox>
			<Image Source="{TemplateBinding Content}"/>	
		</Viewbox>
	</DataTemplate>
	
</ResourceDictionary>
